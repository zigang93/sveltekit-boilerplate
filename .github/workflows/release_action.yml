name: Release Actions
on:
  # push:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release_only:
        description: 'Run release only'
        required: true
        default: false
        type: boolean
      deploy_target:
        description: 'Deploy destination'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - uat
          - production
          - staging-and-uat

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm semantic-release
  # WIP deployment... uncomment this when done
  # deployment:
  #   needs: release
  #   uses: ./.github/workflows/deployment.yml
  #   if: ${{ !inputs.release_only }}
  #   secrets: inherit
  #   with:
  #     deploy_target: ${{ github.event.inputs.deploy_target }}

  # clean-working-directory:
  #   runs-on: [self-hosted, linux, x64]
  #   needs: release
  #   steps:
  #     - name: Clean working directory
  #       shell: bash
  #       run: |
  #         cd $RUNNER_WORKSPACE
  #         cd ..
  #         rm -r *
